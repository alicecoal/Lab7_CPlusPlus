// ---------------------------------------------------------------------------

#include "Stack.h"
#include <ctime>

#ifndef HashH
#define HashH

class Hash
{
public:
	int size;
	Stack* Table;
	int GetHash(int x)
	{
		return (x % size);
	}

public:

	Hash(int x)
	{
		size = x;
		Table = new Stack[size];
		if (!Table) throw 42;
	}

	~Hash()
	{
		clear();
		delete[] Table;
	}

	void clear()
	{
		for (int i = 0; i < size; i++)
		{
			while(!Table[i].empty())
				Table[i].pop_back();
		}
	}

	void insert(int x)
	{
		int ind = GetHash(x);
		//if (Table[ind].current == nullptr) ShowMessage("INIT");
		Table[ind].push_back(x);
		//if (Table[ind].current == nullptr) ShowMessage("INIT");
	}

	void erase(int x)
	{
		int ind = GetHash(x);
		Table[ind].del(x);
	}


	bool contain(int x)
	{
		int ind = GetHash(x);
		Stack y = Table[ind];
		return y.find(x);
	}

	void Randomize()
	{
			srand(time(NULL));
			int x;
			x = rand();
			insert(x);
	}
};

// ---------------------------------------------------------------------------
#endif
